<snippet>
	<content><![CDATA[
/**
 * Script file of ${TM_COMPONENT/(.+)/\u\1/g} component.
 *
 * The name of this class is dependent on the component being installed.
 * The class name should have the component's name, directly followed by
 * the text InstallerScript (ex:. com_helloWorldInstallerScript).
 *
 * This class will be called by Joomla!'s installer, if specified in your component's
 * manifest file, and is used for custom automation actions in its installation process.
 *
 * In order to use this automation script, you should reference it in your component's
 * manifest file as follows:
 * <scriptfile>script.php</scriptfile>
 *
 * @package     Joomla.Administrator
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 *
 * @copyright   Copyright (C) 2005 - 2018 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */
class com_${TM_COMPONENT/(.+)/\L\1/g}InstallerScript
{
    /**
     * This method is called after a component is installed.
     *
     * @param  \stdClass \$parent - Parent object calling this method.
     *
     * @return void
     */
    public function install(\$parent)
    {
        //\$parent->getParent()->setRedirectURL('index.php?option=com_${TM_COMPONENT/(.+)/\L\1/g}');
${20:COM_${TM_COMPONENT/(.+)/\U\1/g}_UNINSTALL_TEXT="$1"
COM_${TM_COMPONENT/(.+)/\U\1/g}_UPDATE_TEXT="$2"
COM_${TM_COMPONENT/(.+)/\U\1/g}_PREFLIGHT_INSTALL_TEXT="$3"
COM_${TM_COMPONENT/(.+)/\U\1/g}_PREFLIGHT_UPDATE_TEXT="$4"
COM_${TM_COMPONENT/(.+)/\U\1/g}_PREFLIGHT_DISCOVER_INSTALL_TEXT="$5"
COM_${TM_COMPONENT/(.+)/\U\1/g}_POSTFLIGHT_INSTALL_TEXT="$6"
COM_${TM_COMPONENT/(.+)/\U\1/g}_POSTFLIGHT_UPDATE_TEXT="$7"
COM_${TM_COMPONENT/(.+)/\U\1/g}_POSTFLIGHT_DISCOVER_INSTALL_TEXT="$8"}
		$0
    }

    /**
     * This method is called after a component is uninstalled.
     *
     * @param  \stdClass \$parent - Parent object calling this method.
     *
     * @return void
     */
    public function uninstall(\$parent)
    {
        //echo '<p>' . JText::_('COM_${TM_COMPONENT/(.+)/\U\1/g}_UNINSTALL_TEXT') . '</p>';
    }

    /**
     * This method is called after a component is updated.
     *
     * @param  \stdClass \$parent - Parent object calling object.
     *
     * @return void
     */
    public function update(\$parent)
    {
        //echo '<p>' . JText::sprintf('COM_${TM_COMPONENT/(.+)/\U\1/g}_UPDATE_TEXT', \$parent->get('manifest')->version) . '</p>';
    }

    /**
     * Runs just before any installation action is performed on the component.
     * Verifications and pre-requisites should run in this function.
     *
     * @param  string    \$type   - Type of PreFlight action. Possible values are:
     *                           - * install
     *                           - * update
     *                           - * discover_install
     * @param  \stdClass \$parent - Parent object calling object.
     *
     * @return void
     */
    public function preflight(\$type, \$parent)
    {
        //echo '<p>' . JText::_('COM_${TM_COMPONENT/(.+)/\U\1/g}_PREFLIGHT_' . \$type . '_TEXT') . '</p>';
    }

    /**
     * Runs right after any installation action is performed on the component.
     *
     * @param  string    \$type   - Type of PostFlight action. Possible values are:
     *                           - * install
     *                           - * update
     *                           - * discover_install
     * @param  \stdClass \$parent - Parent object calling object.
     *
     * @return void
     */
    function postflight(\$type, \$parent)
    {
        //echo '<p>' . JText::_('COM_${TM_COMPONENT/(.+)/\U\1/g}_POSTFLIGHT_' . \$type . '_TEXT') . '</p>';
    }
}
		]]></content>
	<tabTrigger>jadminscript-mini</tabTrigger>
	<scope>source.php</scope>
</snippet>